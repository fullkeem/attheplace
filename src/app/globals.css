@tailwind base;
@tailwind components;
@tailwind utilities;

/* :root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
} */

@font-face {
  font-family: 'InriaSerif';
  src: url('/fonts/InriaSerif-Regular.woff') format('truetype');
  font-weight: normal;
  font-style: normal;
}

.font-custom {
  font-family: 'InriaSerif', sans-serif;
}

body {
  color: #ededed;
  box-sizing: border-box;
  font-family: Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  .blur-2pxr {
    filter: blur(2px);
  }
}

.scrollbar-hide {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
.scrollbar-hide::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}
.truncate {
  white-space: nowrap; /* 텍스트를 한 줄로 */
  overflow: hidden; /* 넘치는 텍스트 숨기기 */
  text-overflow: ellipsis; /* 넘치는 부분을 '...'으로 표시 */
}

.flexCenter {
  @apply flex items-center justify-center;
}

.flexBetween {
  @apply flex w-full items-center justify-between;
}

.bgBox {
  @apply relative mt-14 flex h-full w-full justify-center overflow-hidden;
}

.bgImage {
  @apply blur-2pxr absolute z-[-1] h-dvh w-full scale-110 object-cover;
}

.inputCommon {
  @apply border-b border-gray-600 bg-transparent py-2 text-sm focus:border-gray-300 focus:outline-none;
}

.buttonStyle {
  @apply rounded-md bg-orange-500 py-4 text-center font-bold;
}

.mainStyle {
  @apply flex flex-col items-center justify-center gap-1 text-center;
}

.cafeInfo {
  @apply mx-0 my-1 flex w-full justify-between;
}

.cafeInfoKey {
  @apply w-1/3 font-bold;
}

.cafeInfoValue {
  @apply w-2/3 text-right;
}
